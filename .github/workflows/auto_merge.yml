name: Scheduled Auto Merge by Approval

on:
  schedule:
    - cron: "40 * * * *"  # runs every hour at minute 30 UTC

jobs:
  auto-merge:
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: List open PRs
        id: prs
        uses: actions/github-script@v7
        with:
          script: |
            const prs = await github.rest.pulls.list({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'open'
            });
            // Return PR numbers as JSON string
            return JSON.stringify(prs.data.map(pr => pr.number));

      - name: Merge PRs with enough approvals
        uses: actions/github-script@v7
        with:
          script: |
            const MIN_APPROVALS = 0; // set the threshold you want
            // Parse PR numbers from previous step
            const prNumbers = JSON.parse('${{ steps.prs.outputs.result }}');

            for (const pr_number of prNumbers) {
              const reviews = await github.rest.pulls.listReviews({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: pr_number,
              });

              const approvedCount = reviews.data.filter(r => r.state === "APPROVED").length;

              if (approvedCount >= MIN_APPROVALS) {
                await github.rest.pulls.merge({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  pull_number: pr_number,
                  merge_method: "squash" // choose: squash, merge, or rebase
                });
                console.log(`✅ Merged PR #${pr_number} with ${approvedCount} approvals.`);
              } else {
                console.log(`⚠️ PR #${pr_number} has only ${approvedCount} approvals (<${MIN_APPROVALS}), skipping.`);
              }
            }
